{"version":3,"file":"shevchenko.min.js","sources":["../../src/core/gender.enum.ts","../../src/core/grammatical-case.enum.ts","../../src/core/validator.ts","../../src/anthroponym-inflection/anthroponym-inflector.ts","../../src/anthroponym-inflection/inflector.types.ts","../../node_modules/tslib/tslib.es6.js","../../src/utils/regexp.utils.ts","../../src/utils/string.utils.ts","../../src/anthroponym-inflection/append-command-runner.ts","../../src/anthroponym-inflection/replace-command-runner.ts","../../src/anthroponym-inflection/command-runner-factory.ts","../../src/anthroponym-inflection/rule-inflector.ts","../../src/anthroponym-inflection/name-inflector.ts","../../src/anthroponym-inflection/first-name-inflector.ts","../../src/anthroponym-inflection/middle-name-inflector.ts","../../src/utils/lang.utils.ts","../../src/anthroponym-inflection/last-name-inflector.ts","../../src/part-of-speech-recognition/part-of-speech.enum.ts","../../node_modules/synaptic/dist/synaptic.js","../../src/part-of-speech-recognition/neural-network-config.ts","../../src/part-of-speech-recognition/word-encoder.ts","../../src/part-of-speech-recognition/part-of-speech-encoder.ts","../../src/part-of-speech-recognition/part-of-speech-decoder.ts","../../src/part-of-speech-recognition/neural-network.ts","../../src/part-of-speech-recognition/word-transformer.ts","../../src/part-of-speech-recognition/part-of-speech-recognizer.ts","../../src/part-of-speech-recognition/part-of-speech-recognition-rule.ts","../../src/bootstrap.ts","../../src/shevchenko.ts"],"sourcesContent":[null,null,null,null,null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,"/*!\n * The MIT License (MIT)\n * \n * Copyright (c) 2017 Juan Cazala - https://caza.la\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE\n * \n * \n * \n * ********************************************************************************************\n *                                   SYNAPTIC (v1.1.4)\n * ********************************************************************************************\n * \n * Synaptic is a javascript neural network library for node.js and the browser, its generalized\n * algorithm is architecture-free, so you can build and train basically any type of first order\n * or even second order neural network architectures.\n * \n * http://en.wikipedia.org/wiki/Recurrent_neural_network#Second_Order_Recurrent_Neural_Network\n * \n * The library includes a few built-in architectures like multilayer perceptrons, multilayer\n * long-short term memory networks (LSTM) or liquid state machines, and a trainer capable of\n * training any given network, and includes built-in training tasks/tests like solving an XOR,\n * passing a Distracted Sequence Recall test or an Embeded Reber Grammar test.\n * \n * The algorithm implemented by this library has been taken from Derek D. Monner's paper:\n * \n * \n * A generalized LSTM-like training algorithm for second-order recurrent neural networks\n * http://www.overcomplete.net/papers/nn2012.pdf\n * \n * There are references to the equations in that paper commented through the source code.\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"synaptic\"] = factory();\n\telse\n\t\troot[\"synaptic\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LayerConnection = __webpack_require__(6);\n\nvar _LayerConnection2 = _interopRequireDefault(_LayerConnection);\n\nvar _Neuron = __webpack_require__(2);\n\nvar _Neuron2 = _interopRequireDefault(_Neuron);\n\nvar _Network = __webpack_require__(1);\n\nvar _Network2 = _interopRequireDefault(_Network);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// types of connections\nvar connectionType = {\n  ALL_TO_ALL: \"ALL TO ALL\",\n  ONE_TO_ONE: \"ONE TO ONE\",\n  ALL_TO_ELSE: \"ALL TO ELSE\"\n};\n\n// types of gates\nvar gateType = {\n  INPUT: \"INPUT\",\n  OUTPUT: \"OUTPUT\",\n  ONE_TO_ONE: \"ONE TO ONE\"\n};\n\nvar Layer = function () {\n  function Layer(size) {\n    _classCallCheck(this, Layer);\n\n    this.size = size | 0;\n    this.list = [];\n\n    this.connectedTo = [];\n\n    while (size--) {\n      var neuron = new _Neuron2.default();\n      this.list.push(neuron);\n    }\n  }\n\n  // activates all the neurons in the layer\n\n\n  _createClass(Layer, [{\n    key: 'activate',\n    value: function activate(input) {\n\n      var activations = [];\n\n      if (typeof input != 'undefined') {\n        if (input.length != this.size) throw new Error('INPUT size and LAYER size must be the same to activate!');\n\n        for (var id in this.list) {\n          var neuron = this.list[id];\n          var activation = neuron.activate(input[id]);\n          activations.push(activation);\n        }\n      } else {\n        for (var id in this.list) {\n          var neuron = this.list[id];\n          var activation = neuron.activate();\n          activations.push(activation);\n        }\n      }\n      return activations;\n    }\n\n    // propagates the error on all the neurons of the layer\n\n  }, {\n    key: 'propagate',\n    value: function propagate(rate, target) {\n\n      if (typeof target != 'undefined') {\n        if (target.length != this.size) throw new Error('TARGET size and LAYER size must be the same to propagate!');\n\n        for (var id = this.list.length - 1; id >= 0; id--) {\n          var neuron = this.list[id];\n          neuron.propagate(rate, target[id]);\n        }\n      } else {\n        for (var id = this.list.length - 1; id >= 0; id--) {\n          var neuron = this.list[id];\n          neuron.propagate(rate);\n        }\n      }\n    }\n\n    // projects a connection from this layer to another one\n\n  }, {\n    key: 'project',\n    value: function project(layer, type, weights) {\n\n      if (layer instanceof _Network2.default) layer = layer.layers.input;\n\n      if (layer instanceof Layer) {\n        if (!this.connected(layer)) return new _LayerConnection2.default(this, layer, type, weights);\n      } else throw new Error('Invalid argument, you can only project connections to LAYERS and NETWORKS!');\n    }\n\n    // gates a connection betwenn two layers\n\n  }, {\n    key: 'gate',\n    value: function gate(connection, type) {\n\n      if (type == Layer.gateType.INPUT) {\n        if (connection.to.size != this.size) throw new Error('GATER layer and CONNECTION.TO layer must be the same size in order to gate!');\n\n        for (var id in connection.to.list) {\n          var neuron = connection.to.list[id];\n          var gater = this.list[id];\n          for (var input in neuron.connections.inputs) {\n            var gated = neuron.connections.inputs[input];\n            if (gated.ID in connection.connections) gater.gate(gated);\n          }\n        }\n      } else if (type == Layer.gateType.OUTPUT) {\n        if (connection.from.size != this.size) throw new Error('GATER layer and CONNECTION.FROM layer must be the same size in order to gate!');\n\n        for (var id in connection.from.list) {\n          var neuron = connection.from.list[id];\n          var gater = this.list[id];\n          for (var projected in neuron.connections.projected) {\n            var gated = neuron.connections.projected[projected];\n            if (gated.ID in connection.connections) gater.gate(gated);\n          }\n        }\n      } else if (type == Layer.gateType.ONE_TO_ONE) {\n        if (connection.size != this.size) throw new Error('The number of GATER UNITS must be the same as the number of CONNECTIONS to gate!');\n\n        for (var id in connection.list) {\n          var gater = this.list[id];\n          var gated = connection.list[id];\n          gater.gate(gated);\n        }\n      }\n      connection.gatedfrom.push({ layer: this, type: type });\n    }\n\n    // true or false whether the whole layer is self-connected or not\n\n  }, {\n    key: 'selfconnected',\n    value: function selfconnected() {\n\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        if (!neuron.selfconnected()) return false;\n      }\n      return true;\n    }\n\n    // true of false whether the layer is connected to another layer (parameter) or not\n\n  }, {\n    key: 'connected',\n    value: function connected(layer) {\n      // Check if ALL to ALL connection\n      var connections = 0;\n      for (var here in this.list) {\n        for (var there in layer.list) {\n          var from = this.list[here];\n          var to = layer.list[there];\n          var connected = from.connected(to);\n          if (connected.type == 'projected') connections++;\n        }\n      }\n      if (connections == this.size * layer.size) return Layer.connectionType.ALL_TO_ALL;\n\n      // Check if ONE to ONE connection\n      connections = 0;\n      for (var neuron in this.list) {\n        var from = this.list[neuron];\n        var to = layer.list[neuron];\n        var connected = from.connected(to);\n        if (connected.type == 'projected') connections++;\n      }\n      if (connections == this.size) return Layer.connectionType.ONE_TO_ONE;\n    }\n\n    // clears all the neuorns in the layer\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        neuron.clear();\n      }\n    }\n\n    // resets all the neurons in the layer\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        neuron.reset();\n      }\n    }\n\n    // returns all the neurons in the layer (array)\n\n  }, {\n    key: 'neurons',\n    value: function neurons() {\n      return this.list;\n    }\n\n    // adds a neuron to the layer\n\n  }, {\n    key: 'add',\n    value: function add(neuron) {\n      neuron = neuron || new _Neuron2.default();\n      this.list.push(neuron);\n      this.size++;\n    }\n  }, {\n    key: 'set',\n    value: function set(options) {\n      options = options || {};\n\n      for (var i in this.list) {\n        var neuron = this.list[i];\n        if (options.label) neuron.label = options.label + '_' + neuron.ID;\n        if (options.squash) neuron.squash = options.squash;\n        if (options.bias) neuron.bias = options.bias;\n      }\n      return this;\n    }\n  }]);\n\n  return Layer;\n}();\n\nLayer.connectionType = connectionType;\nLayer.gateType = gateType;\nexports.default = Layer;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Neuron = __webpack_require__(2);\n\nvar _Neuron2 = _interopRequireDefault(_Neuron);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nvar _Trainer = __webpack_require__(3);\n\nvar _Trainer2 = _interopRequireDefault(_Trainer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Network = function () {\n  function Network(layers) {\n    _classCallCheck(this, Network);\n\n    if (typeof layers != 'undefined') {\n      this.layers = {\n        input: layers.input || null,\n        hidden: layers.hidden || [],\n        output: layers.output || null\n      };\n      this.optimized = null;\n    }\n  }\n\n  // feed-forward activation of all the layers to produce an ouput\n\n\n  _createClass(Network, [{\n    key: 'activate',\n    value: function activate(input) {\n      if (this.optimized === false) {\n        this.layers.input.activate(input);\n        for (var i = 0; i < this.layers.hidden.length; i++) {\n          this.layers.hidden[i].activate();\n        }return this.layers.output.activate();\n      } else {\n        if (this.optimized == null) this.optimize();\n        return this.optimized.activate(input);\n      }\n    }\n\n    // back-propagate the error thru the network\n\n  }, {\n    key: 'propagate',\n    value: function propagate(rate, target) {\n      if (this.optimized === false) {\n        this.layers.output.propagate(rate, target);\n        for (var i = this.layers.hidden.length - 1; i >= 0; i--) {\n          this.layers.hidden[i].propagate(rate);\n        }\n      } else {\n        if (this.optimized == null) this.optimize();\n        this.optimized.propagate(rate, target);\n      }\n    }\n\n    // project a connection to another unit (either a network or a layer)\n\n  }, {\n    key: 'project',\n    value: function project(unit, type, weights) {\n      if (this.optimized) this.optimized.reset();\n\n      if (unit instanceof Network) return this.layers.output.project(unit.layers.input, type, weights);\n\n      if (unit instanceof _Layer2.default) return this.layers.output.project(unit, type, weights);\n\n      throw new Error('Invalid argument, you can only project connections to LAYERS and NETWORKS!');\n    }\n\n    // let this network gate a connection\n\n  }, {\n    key: 'gate',\n    value: function gate(connection, type) {\n      if (this.optimized) this.optimized.reset();\n      this.layers.output.gate(connection, type);\n    }\n\n    // clear all elegibility traces and extended elegibility traces (the network forgets its context, but not what was trained)\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.restore();\n\n      var inputLayer = this.layers.input,\n          outputLayer = this.layers.output;\n\n      inputLayer.clear();\n      for (var i = 0; i < this.layers.hidden.length; i++) {\n        this.layers.hidden[i].clear();\n      }\n      outputLayer.clear();\n\n      if (this.optimized) this.optimized.reset();\n    }\n\n    // reset all weights and clear all traces (ends up like a new network)\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.restore();\n\n      var inputLayer = this.layers.input,\n          outputLayer = this.layers.output;\n\n      inputLayer.reset();\n      for (var i = 0; i < this.layers.hidden.length; i++) {\n        this.layers.hidden[i].reset();\n      }\n      outputLayer.reset();\n\n      if (this.optimized) this.optimized.reset();\n    }\n\n    // hardcodes the behaviour of the whole network into a single optimized function\n\n  }, {\n    key: 'optimize',\n    value: function optimize() {\n      var that = this;\n      var optimized = {};\n      var neurons = this.neurons();\n\n      for (var i = 0; i < neurons.length; i++) {\n        var neuron = neurons[i].neuron;\n        var layer = neurons[i].layer;\n        while (neuron.neuron) {\n          neuron = neuron.neuron;\n        }optimized = neuron.optimize(optimized, layer);\n      }\n\n      for (var i = 0; i < optimized.propagation_sentences.length; i++) {\n        optimized.propagation_sentences[i].reverse();\n      }optimized.propagation_sentences.reverse();\n\n      var hardcode = '';\n      hardcode += 'var F = Float64Array ? new Float64Array(' + optimized.memory + ') : []; ';\n      for (var i in optimized.variables) {\n        hardcode += 'F[' + optimized.variables[i].id + '] = ' + (optimized.variables[i].value || 0) + '; ';\n      }hardcode += 'var activate = function(input){\\n';\n      for (var i = 0; i < optimized.inputs.length; i++) {\n        hardcode += 'F[' + optimized.inputs[i] + '] = input[' + i + ']; ';\n      }for (var i = 0; i < optimized.activation_sentences.length; i++) {\n        if (optimized.activation_sentences[i].length > 0) {\n          for (var j = 0; j < optimized.activation_sentences[i].length; j++) {\n            hardcode += optimized.activation_sentences[i][j].join(' ');\n            hardcode += optimized.trace_sentences[i][j].join(' ');\n          }\n        }\n      }\n      hardcode += ' var output = []; ';\n      for (var i = 0; i < optimized.outputs.length; i++) {\n        hardcode += 'output[' + i + '] = F[' + optimized.outputs[i] + ']; ';\n      }hardcode += 'return output; }; ';\n      hardcode += 'var propagate = function(rate, target){\\n';\n      hardcode += 'F[' + optimized.variables.rate.id + '] = rate; ';\n      for (var i = 0; i < optimized.targets.length; i++) {\n        hardcode += 'F[' + optimized.targets[i] + '] = target[' + i + ']; ';\n      }for (var i = 0; i < optimized.propagation_sentences.length; i++) {\n        for (var j = 0; j < optimized.propagation_sentences[i].length; j++) {\n          hardcode += optimized.propagation_sentences[i][j].join(' ') + ' ';\n        }\n      }hardcode += ' };\\n';\n      hardcode += 'var ownership = function(memoryBuffer){\\nF = memoryBuffer;\\nthis.memory = F;\\n};\\n';\n      hardcode += 'return {\\nmemory: F,\\nactivate: activate,\\npropagate: propagate,\\nownership: ownership\\n};';\n      hardcode = hardcode.split(';').join(';\\n');\n\n      var constructor = new Function(hardcode);\n\n      var network = constructor();\n      network.data = {\n        variables: optimized.variables,\n        activate: optimized.activation_sentences,\n        propagate: optimized.propagation_sentences,\n        trace: optimized.trace_sentences,\n        inputs: optimized.inputs,\n        outputs: optimized.outputs,\n        check_activation: this.activate,\n        check_propagation: this.propagate\n      };\n\n      network.reset = function () {\n        if (that.optimized) {\n          that.optimized = null;\n          that.activate = network.data.check_activation;\n          that.propagate = network.data.check_propagation;\n        }\n      };\n\n      this.optimized = network;\n      this.activate = network.activate;\n      this.propagate = network.propagate;\n    }\n\n    // restores all the values from the optimized network the their respective objects in order to manipulate the network\n\n  }, {\n    key: 'restore',\n    value: function restore() {\n      if (!this.optimized) return;\n\n      var optimized = this.optimized;\n\n      var getValue = function getValue() {\n        var args = Array.prototype.slice.call(arguments);\n\n        var unit = args.shift();\n        var prop = args.pop();\n\n        var id = prop + '_';\n        for (var property in args) {\n          id += args[property] + '_';\n        }id += unit.ID;\n\n        var memory = optimized.memory;\n        var variables = optimized.data.variables;\n\n        if (id in variables) return memory[variables[id].id];\n        return 0;\n      };\n\n      var list = this.neurons();\n\n      // link id's to positions in the array\n      for (var i = 0; i < list.length; i++) {\n        var neuron = list[i].neuron;\n        while (neuron.neuron) {\n          neuron = neuron.neuron;\n        }neuron.state = getValue(neuron, 'state');\n        neuron.old = getValue(neuron, 'old');\n        neuron.activation = getValue(neuron, 'activation');\n        neuron.bias = getValue(neuron, 'bias');\n\n        for (var input in neuron.trace.elegibility) {\n          neuron.trace.elegibility[input] = getValue(neuron, 'trace', 'elegibility', input);\n        }for (var gated in neuron.trace.extended) {\n          for (var input in neuron.trace.extended[gated]) {\n            neuron.trace.extended[gated][input] = getValue(neuron, 'trace', 'extended', gated, input);\n          }\n        } // get connections\n        for (var j in neuron.connections.projected) {\n          var connection = neuron.connections.projected[j];\n          connection.weight = getValue(connection, 'weight');\n          connection.gain = getValue(connection, 'gain');\n        }\n      }\n    }\n\n    // returns all the neurons in the network\n\n  }, {\n    key: 'neurons',\n    value: function neurons() {\n      var neurons = [];\n\n      var inputLayer = this.layers.input.neurons(),\n          outputLayer = this.layers.output.neurons();\n\n      for (var i = 0; i < inputLayer.length; i++) {\n        neurons.push({\n          neuron: inputLayer[i],\n          layer: 'input'\n        });\n      }\n\n      for (var i = 0; i < this.layers.hidden.length; i++) {\n        var hiddenLayer = this.layers.hidden[i].neurons();\n        for (var j = 0; j < hiddenLayer.length; j++) {\n          neurons.push({\n            neuron: hiddenLayer[j],\n            layer: i\n          });\n        }\n      }\n\n      for (var i = 0; i < outputLayer.length; i++) {\n        neurons.push({\n          neuron: outputLayer[i],\n          layer: 'output'\n        });\n      }\n\n      return neurons;\n    }\n\n    // returns number of inputs of the network\n\n  }, {\n    key: 'inputs',\n    value: function inputs() {\n      return this.layers.input.size;\n    }\n\n    // returns number of outputs of hte network\n\n  }, {\n    key: 'outputs',\n    value: function outputs() {\n      return this.layers.output.size;\n    }\n\n    // sets the layers of the network\n\n  }, {\n    key: 'set',\n    value: function set(layers) {\n      this.layers = {\n        input: layers.input || null,\n        hidden: layers.hidden || [],\n        output: layers.output || null\n      };\n      if (this.optimized) this.optimized.reset();\n    }\n  }, {\n    key: 'setOptimize',\n    value: function setOptimize(bool) {\n      this.restore();\n      if (this.optimized) this.optimized.reset();\n      this.optimized = bool ? null : false;\n    }\n\n    // returns a json that represents all the neurons and connections of the network\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON(ignoreTraces) {\n      this.restore();\n\n      var list = this.neurons();\n      var neurons = [];\n      var connections = [];\n\n      // link id's to positions in the array\n      var ids = {};\n      for (var i = 0; i < list.length; i++) {\n        var neuron = list[i].neuron;\n        while (neuron.neuron) {\n          neuron = neuron.neuron;\n        }ids[neuron.ID] = i;\n\n        var copy = {\n          trace: {\n            elegibility: {},\n            extended: {}\n          },\n          state: neuron.state,\n          old: neuron.old,\n          activation: neuron.activation,\n          bias: neuron.bias,\n          layer: list[i].layer\n        };\n\n        copy.squash = neuron.squash == _Neuron2.default.squash.LOGISTIC ? 'LOGISTIC' : neuron.squash == _Neuron2.default.squash.TANH ? 'TANH' : neuron.squash == _Neuron2.default.squash.IDENTITY ? 'IDENTITY' : neuron.squash == _Neuron2.default.squash.HLIM ? 'HLIM' : neuron.squash == _Neuron2.default.squash.RELU ? 'RELU' : null;\n\n        neurons.push(copy);\n      }\n\n      for (var i = 0; i < list.length; i++) {\n        var neuron = list[i].neuron;\n        while (neuron.neuron) {\n          neuron = neuron.neuron;\n        }for (var j in neuron.connections.projected) {\n          var connection = neuron.connections.projected[j];\n          connections.push({\n            from: ids[connection.from.ID],\n            to: ids[connection.to.ID],\n            weight: connection.weight,\n            gater: connection.gater ? ids[connection.gater.ID] : null\n          });\n        }\n        if (neuron.selfconnected()) {\n          connections.push({\n            from: ids[neuron.ID],\n            to: ids[neuron.ID],\n            weight: neuron.selfconnection.weight,\n            gater: neuron.selfconnection.gater ? ids[neuron.selfconnection.gater.ID] : null\n          });\n        }\n      }\n\n      return {\n        neurons: neurons,\n        connections: connections\n      };\n    }\n\n    // export the topology into dot language which can be visualized as graphs using dot\n    /* example: ... console.log(net.toDotLang());\n                $ node example.js > example.dot\n                $ dot example.dot -Tpng > out.png\n    */\n\n  }, {\n    key: 'toDot',\n    value: function toDot(edgeConnection) {\n      if (!(typeof edgeConnection === 'undefined' ? 'undefined' : _typeof(edgeConnection))) edgeConnection = false;\n      var code = 'digraph nn {\\n    rankdir = BT\\n';\n      var layers = [this.layers.input].concat(this.layers.hidden, this.layers.output);\n      for (var i = 0; i < layers.length; i++) {\n        for (var j = 0; j < layers[i].connectedTo.length; j++) {\n          // projections\n          var connection = layers[i].connectedTo[j];\n          var layerTo = connection.to;\n          var size = connection.size;\n          var layerID = layers.indexOf(layers[i]);\n          var layerToID = layers.indexOf(layerTo);\n          /* http://stackoverflow.com/questions/26845540/connect-edges-with-graph-dot\n           * DOT does not support edge-to-edge connections\n           * This workaround produces somewhat weird graphs ...\n          */\n          if (edgeConnection) {\n            if (connection.gatedfrom.length) {\n              var fakeNode = 'fake' + layerID + '_' + layerToID;\n              code += '    ' + fakeNode + ' [label = \"\", shape = point, width = 0.01, height = 0.01]\\n';\n              code += '    ' + layerID + ' -> ' + fakeNode + ' [label = ' + size + ', arrowhead = none]\\n';\n              code += '    ' + fakeNode + ' -> ' + layerToID + '\\n';\n            } else code += '    ' + layerID + ' -> ' + layerToID + ' [label = ' + size + ']\\n';\n            for (var from in connection.gatedfrom) {\n              // gatings\n              var layerfrom = connection.gatedfrom[from].layer;\n              var layerfromID = layers.indexOf(layerfrom);\n              code += '    ' + layerfromID + ' -> ' + fakeNode + ' [color = blue]\\n';\n            }\n          } else {\n            code += '    ' + layerID + ' -> ' + layerToID + ' [label = ' + size + ']\\n';\n            for (var from in connection.gatedfrom) {\n              // gatings\n              var layerfrom = connection.gatedfrom[from].layer;\n              var layerfromID = layers.indexOf(layerfrom);\n              code += '    ' + layerfromID + ' -> ' + layerToID + ' [color = blue]\\n';\n            }\n          }\n        }\n      }\n      code += '}\\n';\n      return {\n        code: code,\n        link: 'https://chart.googleapis.com/chart?chl=' + escape(code.replace('/ /g', '+')) + '&cht=gv'\n      };\n    }\n\n    // returns a function that works as the activation of the network and can be used without depending on the library\n\n  }, {\n    key: 'standalone',\n    value: function standalone() {\n      if (!this.optimized) this.optimize();\n\n      var data = this.optimized.data;\n\n      // build activation function\n      var activation = 'function (input) {\\n';\n\n      // build inputs\n      for (var i = 0; i < data.inputs.length; i++) {\n        activation += 'F[' + data.inputs[i] + '] = input[' + i + '];\\n';\n      } // build network activation\n      for (var i = 0; i < data.activate.length; i++) {\n        // shouldn't this be layer?\n        for (var j = 0; j < data.activate[i].length; j++) {\n          activation += data.activate[i][j].join('') + '\\n';\n        }\n      }\n\n      // build outputs\n      activation += 'var output = [];\\n';\n      for (var i = 0; i < data.outputs.length; i++) {\n        activation += 'output[' + i + '] = F[' + data.outputs[i] + '];\\n';\n      }activation += 'return output;\\n}';\n\n      // reference all the positions in memory\n      var memory = activation.match(/F\\[(\\d+)\\]/g);\n      var dimension = 0;\n      var ids = {};\n\n      for (var i = 0; i < memory.length; i++) {\n        var tmp = memory[i].match(/\\d+/)[0];\n        if (!(tmp in ids)) {\n          ids[tmp] = dimension++;\n        }\n      }\n      var hardcode = 'F = {\\n';\n\n      for (var i in ids) {\n        hardcode += ids[i] + ': ' + this.optimized.memory[i] + ',\\n';\n      }hardcode = hardcode.substring(0, hardcode.length - 2) + '\\n};\\n';\n      hardcode = 'var run = ' + activation.replace(/F\\[(\\d+)]/g, function (index) {\n        return 'F[' + ids[index.match(/\\d+/)[0]] + ']';\n      }).replace('{\\n', '{\\n' + hardcode + '') + ';\\n';\n      hardcode += 'return run';\n\n      // return standalone function\n      return new Function(hardcode)();\n    }\n\n    // Return a HTML5 WebWorker specialized on training the network stored in `memory`.\n    // Train based on the given dataSet and options.\n    // The worker returns the updated `memory` when done.\n\n  }, {\n    key: 'worker',\n    value: function worker(memory, set, options) {\n      // Copy the options and set defaults (options might be different for each worker)\n      var workerOptions = {};\n      if (options) workerOptions = options;\n      workerOptions.rate = workerOptions.rate || .2;\n      workerOptions.iterations = workerOptions.iterations || 100000;\n      workerOptions.error = workerOptions.error || .005;\n      workerOptions.cost = workerOptions.cost || null;\n      workerOptions.crossValidate = workerOptions.crossValidate || null;\n\n      // Cost function might be different for each worker\n      var costFunction = '// REPLACED BY WORKER\\nvar cost = ' + (options && options.cost || this.cost || _Trainer2.default.cost.MSE) + ';\\n';\n      var workerFunction = Network.getWorkerSharedFunctions();\n      workerFunction = workerFunction.replace(/var cost = options && options\\.cost \\|\\| this\\.cost \\|\\| Trainer\\.cost\\.MSE;/g, costFunction);\n\n      // Set what we do when training is finished\n      workerFunction = workerFunction.replace('return results;', 'postMessage({action: \"done\", message: results, memoryBuffer: F}, [F.buffer]);');\n\n      // Replace log with postmessage\n      workerFunction = workerFunction.replace('console.log(\\'iterations\\', iterations, \\'error\\', error, \\'rate\\', currentRate)', 'postMessage({action: \\'log\\', message: {\\n' + 'iterations: iterations,\\n' + 'error: error,\\n' + 'rate: currentRate\\n' + '}\\n' + '})');\n\n      // Replace schedule with postmessage\n      workerFunction = workerFunction.replace('abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate })', 'postMessage({action: \\'schedule\\', message: {\\n' + 'iterations: iterations,\\n' + 'error: error,\\n' + 'rate: currentRate\\n' + '}\\n' + '})');\n\n      if (!this.optimized) this.optimize();\n\n      var hardcode = 'var inputs = ' + this.optimized.data.inputs.length + ';\\n';\n      hardcode += 'var outputs = ' + this.optimized.data.outputs.length + ';\\n';\n      hardcode += 'var F =  new Float64Array([' + this.optimized.memory.toString() + ']);\\n';\n      hardcode += 'var activate = ' + this.optimized.activate.toString() + ';\\n';\n      hardcode += 'var propagate = ' + this.optimized.propagate.toString() + ';\\n';\n      hardcode += 'onmessage = function(e) {\\n' + 'if (e.data.action == \\'startTraining\\') {\\n' + 'train(' + JSON.stringify(set) + ',' + JSON.stringify(workerOptions) + ');\\n' + '}\\n' + '}';\n\n      var workerSourceCode = workerFunction + '\\n' + hardcode;\n      var blob = new Blob([workerSourceCode]);\n      var blobURL = window.URL.createObjectURL(blob);\n\n      return new Worker(blobURL);\n    }\n\n    // returns a copy of the network\n\n  }, {\n    key: 'clone',\n    value: function clone() {\n      return Network.fromJSON(this.toJSON());\n    }\n\n    /**\n     * Creates a static String to store the source code of the functions\n     *  that are identical for all the workers (train, _trainSet, test)\n     *\n     * @return {String} Source code that can train a network inside a worker.\n     * @static\n     */\n\n  }], [{\n    key: 'getWorkerSharedFunctions',\n    value: function getWorkerSharedFunctions() {\n      // If we already computed the source code for the shared functions\n      if (typeof Network._SHARED_WORKER_FUNCTIONS !== 'undefined') return Network._SHARED_WORKER_FUNCTIONS;\n\n      // Otherwise compute and return the source code\n      // We compute them by simply copying the source code of the train, _trainSet and test functions\n      //  using the .toString() method\n\n      // Load and name the train function\n      var train_f = _Trainer2.default.prototype.train.toString();\n      train_f = train_f.replace(/this._trainSet/g, '_trainSet');\n      train_f = train_f.replace(/this.test/g, 'test');\n      train_f = train_f.replace(/this.crossValidate/g, 'crossValidate');\n      train_f = train_f.replace('crossValidate = true', '// REMOVED BY WORKER');\n\n      // Load and name the _trainSet function\n      var _trainSet_f = _Trainer2.default.prototype._trainSet.toString().replace(/this.network./g, '');\n\n      // Load and name the test function\n      var test_f = _Trainer2.default.prototype.test.toString().replace(/this.network./g, '');\n\n      return Network._SHARED_WORKER_FUNCTIONS = train_f + '\\n' + _trainSet_f + '\\n' + test_f;\n    }\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(json) {\n      var neurons = [];\n\n      var layers = {\n        input: new _Layer2.default(),\n        hidden: [],\n        output: new _Layer2.default()\n      };\n\n      for (var i = 0; i < json.neurons.length; i++) {\n        var config = json.neurons[i];\n\n        var neuron = new _Neuron2.default();\n        neuron.trace.elegibility = {};\n        neuron.trace.extended = {};\n        neuron.state = config.state;\n        neuron.old = config.old;\n        neuron.activation = config.activation;\n        neuron.bias = config.bias;\n        neuron.squash = config.squash in _Neuron2.default.squash ? _Neuron2.default.squash[config.squash] : _Neuron2.default.squash.LOGISTIC;\n        neurons.push(neuron);\n\n        if (config.layer == 'input') layers.input.add(neuron);else if (config.layer == 'output') layers.output.add(neuron);else {\n          if (typeof layers.hidden[config.layer] == 'undefined') layers.hidden[config.layer] = new _Layer2.default();\n          layers.hidden[config.layer].add(neuron);\n        }\n      }\n\n      for (var i = 0; i < json.connections.length; i++) {\n        var config = json.connections[i];\n        var from = neurons[config.from];\n        var to = neurons[config.to];\n        var weight = config.weight;\n        var gater = neurons[config.gater];\n\n        var connection = from.project(to, weight);\n        if (gater) gater.gate(connection);\n      }\n\n      return new Network(layers);\n    }\n  }]);\n\n  return Network;\n}();\n\nexports.default = Network;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Connection = __webpack_require__(5);\n\nvar _Connection2 = _interopRequireDefault(_Connection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar neurons = 0;\n\n// squashing functions\nvar squash = {\n  // eq. 5 & 5'\n  LOGISTIC: function LOGISTIC(x, derivate) {\n    var fx = 1 / (1 + Math.exp(-x));\n    if (!derivate) return fx;\n    return fx * (1 - fx);\n  },\n  TANH: function TANH(x, derivate) {\n    if (derivate) return 1 - Math.pow(Math.tanh(x), 2);\n    return Math.tanh(x);\n  },\n  IDENTITY: function IDENTITY(x, derivate) {\n    return derivate ? 1 : x;\n  },\n  HLIM: function HLIM(x, derivate) {\n    return derivate ? 1 : x > 0 ? 1 : 0;\n  },\n  RELU: function RELU(x, derivate) {\n    if (derivate) return x > 0 ? 1 : 0;\n    return x > 0 ? x : 0;\n  }\n};\n\nvar Neuron = function () {\n  function Neuron() {\n    _classCallCheck(this, Neuron);\n\n    this.ID = Neuron.uid();\n\n    this.connections = {\n      inputs: {},\n      projected: {},\n      gated: {}\n    };\n    this.error = {\n      responsibility: 0,\n      projected: 0,\n      gated: 0\n    };\n    this.trace = {\n      elegibility: {},\n      extended: {},\n      influences: {}\n    };\n    this.state = 0;\n    this.old = 0;\n    this.activation = 0;\n    this.selfconnection = new _Connection2.default(this, this, 0); // weight = 0 -> not connected\n    this.squash = Neuron.squash.LOGISTIC;\n    this.neighboors = {};\n    this.bias = Math.random() * .2 - .1;\n  }\n\n  // activate the neuron\n\n\n  _createClass(Neuron, [{\n    key: 'activate',\n    value: function activate(input) {\n      // activation from enviroment (for input neurons)\n      if (typeof input != 'undefined') {\n        this.activation = input;\n        this.derivative = 0;\n        this.bias = 0;\n        return this.activation;\n      }\n\n      // old state\n      this.old = this.state;\n\n      // eq. 15\n      this.state = this.selfconnection.gain * this.selfconnection.weight * this.state + this.bias;\n\n      for (var i in this.connections.inputs) {\n        var input = this.connections.inputs[i];\n        this.state += input.from.activation * input.weight * input.gain;\n      }\n\n      // eq. 16\n      this.activation = this.squash(this.state);\n\n      // f'(s)\n      this.derivative = this.squash(this.state, true);\n\n      // update traces\n      var influences = [];\n      for (var id in this.trace.extended) {\n        // extended elegibility trace\n        var neuron = this.neighboors[id];\n\n        // if gated neuron's selfconnection is gated by this unit, the influence keeps track of the neuron's old state\n        var influence = neuron.selfconnection.gater == this ? neuron.old : 0;\n\n        // index runs over all the incoming connections to the gated neuron that are gated by this unit\n        for (var incoming in this.trace.influences[neuron.ID]) {\n          // captures the effect that has an input connection to this unit, on a neuron that is gated by this unit\n          influence += this.trace.influences[neuron.ID][incoming].weight * this.trace.influences[neuron.ID][incoming].from.activation;\n        }\n        influences[neuron.ID] = influence;\n      }\n\n      for (var i in this.connections.inputs) {\n        var input = this.connections.inputs[i];\n\n        // elegibility trace - Eq. 17\n        this.trace.elegibility[input.ID] = this.selfconnection.gain * this.selfconnection.weight * this.trace.elegibility[input.ID] + input.gain * input.from.activation;\n\n        for (var id in this.trace.extended) {\n          // extended elegibility trace\n          var xtrace = this.trace.extended[id];\n          var neuron = this.neighboors[id];\n          var influence = influences[neuron.ID];\n\n          // eq. 18\n          xtrace[input.ID] = neuron.selfconnection.gain * neuron.selfconnection.weight * xtrace[input.ID] + this.derivative * this.trace.elegibility[input.ID] * influence;\n        }\n      }\n\n      //  update gated connection's gains\n      for (var connection in this.connections.gated) {\n        this.connections.gated[connection].gain = this.activation;\n      }\n\n      return this.activation;\n    }\n\n    // back-propagate the error\n\n  }, {\n    key: 'propagate',\n    value: function propagate(rate, target) {\n      // error accumulator\n      var error = 0;\n\n      // whether or not this neuron is in the output layer\n      var isOutput = typeof target != 'undefined';\n\n      // output neurons get their error from the enviroment\n      if (isOutput) this.error.responsibility = this.error.projected = target - this.activation; // Eq. 10\n\n      else // the rest of the neuron compute their error responsibilities by backpropagation\n        {\n          // error responsibilities from all the connections projected from this neuron\n          for (var id in this.connections.projected) {\n            var connection = this.connections.projected[id];\n            var neuron = connection.to;\n            // Eq. 21\n            error += neuron.error.responsibility * connection.gain * connection.weight;\n          }\n\n          // projected error responsibility\n          this.error.projected = this.derivative * error;\n\n          error = 0;\n          // error responsibilities from all the connections gated by this neuron\n          for (var id in this.trace.extended) {\n            var neuron = this.neighboors[id]; // gated neuron\n            var influence = neuron.selfconnection.gater == this ? neuron.old : 0; // if gated neuron's selfconnection is gated by this neuron\n\n            // index runs over all the connections to the gated neuron that are gated by this neuron\n            for (var input in this.trace.influences[id]) {\n              // captures the effect that the input connection of this neuron have, on a neuron which its input/s is/are gated by this neuron\n              influence += this.trace.influences[id][input].weight * this.trace.influences[neuron.ID][input].from.activation;\n            }\n            // eq. 22\n            error += neuron.error.responsibility * influence;\n          }\n\n          // gated error responsibility\n          this.error.gated = this.derivative * error;\n\n          // error responsibility - Eq. 23\n          this.error.responsibility = this.error.projected + this.error.gated;\n        }\n\n      // learning rate\n      rate = rate || .1;\n\n      // adjust all the neuron's incoming connections\n      for (var id in this.connections.inputs) {\n        var input = this.connections.inputs[id];\n\n        // Eq. 24\n        var gradient = this.error.projected * this.trace.elegibility[input.ID];\n        for (var id in this.trace.extended) {\n          var neuron = this.neighboors[id];\n          gradient += neuron.error.responsibility * this.trace.extended[neuron.ID][input.ID];\n        }\n        input.weight += rate * gradient; // adjust weights - aka learn\n      }\n\n      // adjust bias\n      this.bias += rate * this.error.responsibility;\n    }\n  }, {\n    key: 'project',\n    value: function project(neuron, weight) {\n      // self-connection\n      if (neuron == this) {\n        this.selfconnection.weight = 1;\n        return this.selfconnection;\n      }\n\n      // check if connection already exists\n      var connected = this.connected(neuron);\n      if (connected && connected.type == 'projected') {\n        // update connection\n        if (typeof weight != 'undefined') connected.connection.weight = weight;\n        // return existing connection\n        return connected.connection;\n      } else {\n        // create a new connection\n        var connection = new _Connection2.default(this, neuron, weight);\n      }\n\n      // reference all the connections and traces\n      this.connections.projected[connection.ID] = connection;\n      this.neighboors[neuron.ID] = neuron;\n      neuron.connections.inputs[connection.ID] = connection;\n      neuron.trace.elegibility[connection.ID] = 0;\n\n      for (var id in neuron.trace.extended) {\n        var trace = neuron.trace.extended[id];\n        trace[connection.ID] = 0;\n      }\n\n      return connection;\n    }\n  }, {\n    key: 'gate',\n    value: function gate(connection) {\n      // add connection to gated list\n      this.connections.gated[connection.ID] = connection;\n\n      var neuron = connection.to;\n      if (!(neuron.ID in this.trace.extended)) {\n        // extended trace\n        this.neighboors[neuron.ID] = neuron;\n        var xtrace = this.trace.extended[neuron.ID] = {};\n        for (var id in this.connections.inputs) {\n          var input = this.connections.inputs[id];\n          xtrace[input.ID] = 0;\n        }\n      }\n\n      // keep track\n      if (neuron.ID in this.trace.influences) this.trace.influences[neuron.ID].push(connection);else this.trace.influences[neuron.ID] = [connection];\n\n      // set gater\n      connection.gater = this;\n    }\n\n    // returns true or false whether the neuron is self-connected or not\n\n  }, {\n    key: 'selfconnected',\n    value: function selfconnected() {\n      return this.selfconnection.weight !== 0;\n    }\n\n    // returns true or false whether the neuron is connected to another neuron (parameter)\n\n  }, {\n    key: 'connected',\n    value: function connected(neuron) {\n      var result = {\n        type: null,\n        connection: false\n      };\n\n      if (this == neuron) {\n        if (this.selfconnected()) {\n          result.type = 'selfconnection';\n          result.connection = this.selfconnection;\n          return result;\n        } else return false;\n      }\n\n      for (var type in this.connections) {\n        for (var connection in this.connections[type]) {\n          var connection = this.connections[type][connection];\n          if (connection.to == neuron) {\n            result.type = type;\n            result.connection = connection;\n            return result;\n          } else if (connection.from == neuron) {\n            result.type = type;\n            result.connection = connection;\n            return result;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    // clears all the traces (the neuron forgets it's context, but the connections remain intact)\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      for (var trace in this.trace.elegibility) {\n        this.trace.elegibility[trace] = 0;\n      }\n\n      for (var trace in this.trace.extended) {\n        for (var extended in this.trace.extended[trace]) {\n          this.trace.extended[trace][extended] = 0;\n        }\n      }\n\n      this.error.responsibility = this.error.projected = this.error.gated = 0;\n    }\n\n    // all the connections are randomized and the traces are cleared\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.clear();\n\n      for (var type in this.connections) {\n        for (var connection in this.connections[type]) {\n          this.connections[type][connection].weight = Math.random() * .2 - .1;\n        }\n      }\n\n      this.bias = Math.random() * .2 - .1;\n      this.old = this.state = this.activation = 0;\n    }\n\n    // hardcodes the behaviour of the neuron into an optimized function\n\n  }, {\n    key: 'optimize',\n    value: function optimize(optimized, layer) {\n\n      optimized = optimized || {};\n      var store_activation = [];\n      var store_trace = [];\n      var store_propagation = [];\n      var varID = optimized.memory || 0;\n      var neurons = optimized.neurons || 1;\n      var inputs = optimized.inputs || [];\n      var targets = optimized.targets || [];\n      var outputs = optimized.outputs || [];\n      var variables = optimized.variables || {};\n      var activation_sentences = optimized.activation_sentences || [];\n      var trace_sentences = optimized.trace_sentences || [];\n      var propagation_sentences = optimized.propagation_sentences || [];\n      var layers = optimized.layers || { __count: 0, __neuron: 0 };\n\n      // allocate sentences\n      var allocate = function allocate(store) {\n        var allocated = layer in layers && store[layers.__count];\n        if (!allocated) {\n          layers.__count = store.push([]) - 1;\n          layers[layer] = layers.__count;\n        }\n      };\n      allocate(activation_sentences);\n      allocate(trace_sentences);\n      allocate(propagation_sentences);\n      var currentLayer = layers.__count;\n\n      // get/reserve space in memory by creating a unique ID for a variablel\n      var getVar = function getVar() {\n        var args = Array.prototype.slice.call(arguments);\n\n        if (args.length == 1) {\n          if (args[0] == 'target') {\n            var id = 'target_' + targets.length;\n            targets.push(varID);\n          } else var id = args[0];\n          if (id in variables) return variables[id];\n          return variables[id] = {\n            value: 0,\n            id: varID++\n          };\n        } else {\n          var extended = args.length > 2;\n          if (extended) var value = args.pop();\n\n          var unit = args.shift();\n          var prop = args.pop();\n\n          if (!extended) var value = unit[prop];\n\n          var id = prop + '_';\n          for (var i = 0; i < args.length; i++) {\n            id += args[i] + '_';\n          }id += unit.ID;\n          if (id in variables) return variables[id];\n\n          return variables[id] = {\n            value: value,\n            id: varID++\n          };\n        }\n      };\n\n      // build sentence\n      var buildSentence = function buildSentence() {\n        var args = Array.prototype.slice.call(arguments);\n        var store = args.pop();\n        var sentence = '';\n        for (var i = 0; i < args.length; i++) {\n          if (typeof args[i] == 'string') sentence += args[i];else sentence += 'F[' + args[i].id + ']';\n        }store.push(sentence + ';');\n      };\n\n      // helper to check if an object is empty\n      var isEmpty = function isEmpty(obj) {\n        for (var prop in obj) {\n          if (obj.hasOwnProperty(prop)) return false;\n        }\n        return true;\n      };\n\n      // characteristics of the neuron\n      var noProjections = isEmpty(this.connections.projected);\n      var noGates = isEmpty(this.connections.gated);\n      var isInput = layer == 'input' ? true : isEmpty(this.connections.inputs);\n      var isOutput = layer == 'output' ? true : noProjections && noGates;\n\n      // optimize neuron's behaviour\n      var rate = getVar('rate');\n      var activation = getVar(this, 'activation');\n      if (isInput) inputs.push(activation.id);else {\n        activation_sentences[currentLayer].push(store_activation);\n        trace_sentences[currentLayer].push(store_trace);\n        propagation_sentences[currentLayer].push(store_propagation);\n        var old = getVar(this, 'old');\n        var state = getVar(this, 'state');\n        var bias = getVar(this, 'bias');\n        if (this.selfconnection.gater) var self_gain = getVar(this.selfconnection, 'gain');\n        if (this.selfconnected()) var self_weight = getVar(this.selfconnection, 'weight');\n        buildSentence(old, ' = ', state, store_activation);\n        if (this.selfconnected()) {\n          if (this.selfconnection.gater) buildSentence(state, ' = ', self_gain, ' * ', self_weight, ' * ', state, ' + ', bias, store_activation);else buildSentence(state, ' = ', self_weight, ' * ', state, ' + ', bias, store_activation);\n        } else buildSentence(state, ' = ', bias, store_activation);\n        for (var i in this.connections.inputs) {\n          var input = this.connections.inputs[i];\n          var input_activation = getVar(input.from, 'activation');\n          var input_weight = getVar(input, 'weight');\n          if (input.gater) var input_gain = getVar(input, 'gain');\n          if (this.connections.inputs[i].gater) buildSentence(state, ' += ', input_activation, ' * ', input_weight, ' * ', input_gain, store_activation);else buildSentence(state, ' += ', input_activation, ' * ', input_weight, store_activation);\n        }\n        var derivative = getVar(this, 'derivative');\n        switch (this.squash) {\n          case Neuron.squash.LOGISTIC:\n            buildSentence(activation, ' = (1 / (1 + Math.exp(-', state, ')))', store_activation);\n            buildSentence(derivative, ' = ', activation, ' * (1 - ', activation, ')', store_activation);\n            break;\n          case Neuron.squash.TANH:\n            var eP = getVar('aux');\n            var eN = getVar('aux_2');\n            buildSentence(eP, ' = Math.exp(', state, ')', store_activation);\n            buildSentence(eN, ' = 1 / ', eP, store_activation);\n            buildSentence(activation, ' = (', eP, ' - ', eN, ') / (', eP, ' + ', eN, ')', store_activation);\n            buildSentence(derivative, ' = 1 - (', activation, ' * ', activation, ')', store_activation);\n            break;\n          case Neuron.squash.IDENTITY:\n            buildSentence(activation, ' = ', state, store_activation);\n            buildSentence(derivative, ' = 1', store_activation);\n            break;\n          case Neuron.squash.HLIM:\n            buildSentence(activation, ' = +(', state, ' > 0)', store_activation);\n            buildSentence(derivative, ' = 1', store_activation);\n            break;\n          case Neuron.squash.RELU:\n            buildSentence(activation, ' = ', state, ' > 0 ? ', state, ' : 0', store_activation);\n            buildSentence(derivative, ' = ', state, ' > 0 ? 1 : 0', store_activation);\n            break;\n        }\n\n        for (var id in this.trace.extended) {\n          // calculate extended elegibility traces in advance\n          var neuron = this.neighboors[id];\n          var influence = getVar('influences[' + neuron.ID + ']');\n          var neuron_old = getVar(neuron, 'old');\n          var initialized = false;\n          if (neuron.selfconnection.gater == this) {\n            buildSentence(influence, ' = ', neuron_old, store_trace);\n            initialized = true;\n          }\n          for (var incoming in this.trace.influences[neuron.ID]) {\n            var incoming_weight = getVar(this.trace.influences[neuron.ID][incoming], 'weight');\n            var incoming_activation = getVar(this.trace.influences[neuron.ID][incoming].from, 'activation');\n\n            if (initialized) buildSentence(influence, ' += ', incoming_weight, ' * ', incoming_activation, store_trace);else {\n              buildSentence(influence, ' = ', incoming_weight, ' * ', incoming_activation, store_trace);\n              initialized = true;\n            }\n          }\n        }\n\n        for (var i in this.connections.inputs) {\n          var input = this.connections.inputs[i];\n          if (input.gater) var input_gain = getVar(input, 'gain');\n          var input_activation = getVar(input.from, 'activation');\n          var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n          if (this.selfconnected()) {\n            if (this.selfconnection.gater) {\n              if (input.gater) buildSentence(trace, ' = ', self_gain, ' * ', self_weight, ' * ', trace, ' + ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', self_gain, ' * ', self_weight, ' * ', trace, ' + ', input_activation, store_trace);\n            } else {\n              if (input.gater) buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ', input_activation, store_trace);\n            }\n          } else {\n            if (input.gater) buildSentence(trace, ' = ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', input_activation, store_trace);\n          }\n          for (var id in this.trace.extended) {\n            // extended elegibility trace\n            var neuron = this.neighboors[id];\n            var influence = getVar('influences[' + neuron.ID + ']');\n\n            var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n            var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n            if (neuron.selfconnected()) var neuron_self_weight = getVar(neuron.selfconnection, 'weight');\n            if (neuron.selfconnection.gater) var neuron_self_gain = getVar(neuron.selfconnection, 'gain');\n            if (neuron.selfconnected()) {\n              if (neuron.selfconnection.gater) buildSentence(xtrace, ' = ', neuron_self_gain, ' * ', neuron_self_weight, ' * ', xtrace, ' + ', derivative, ' * ', trace, ' * ', influence, store_trace);else buildSentence(xtrace, ' = ', neuron_self_weight, ' * ', xtrace, ' + ', derivative, ' * ', trace, ' * ', influence, store_trace);\n            } else buildSentence(xtrace, ' = ', derivative, ' * ', trace, ' * ', influence, store_trace);\n          }\n        }\n        for (var connection in this.connections.gated) {\n          var gated_gain = getVar(this.connections.gated[connection], 'gain');\n          buildSentence(gated_gain, ' = ', activation, store_activation);\n        }\n      }\n      if (!isInput) {\n        var responsibility = getVar(this, 'error', 'responsibility', this.error.responsibility);\n        if (isOutput) {\n          var target = getVar('target');\n          buildSentence(responsibility, ' = ', target, ' - ', activation, store_propagation);\n          for (var id in this.connections.inputs) {\n            var input = this.connections.inputs[id];\n            var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n            var input_weight = getVar(input, 'weight');\n            buildSentence(input_weight, ' += ', rate, ' * (', responsibility, ' * ', trace, ')', store_propagation);\n          }\n          outputs.push(activation.id);\n        } else {\n          if (!noProjections && !noGates) {\n            var error = getVar('aux');\n            for (var id in this.connections.projected) {\n              var connection = this.connections.projected[id];\n              var neuron = connection.to;\n              var connection_weight = getVar(connection, 'weight');\n              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n              if (connection.gater) {\n                var connection_gain = getVar(connection, 'gain');\n                buildSentence(error, ' += ', neuron_responsibility, ' * ', connection_gain, ' * ', connection_weight, store_propagation);\n              } else buildSentence(error, ' += ', neuron_responsibility, ' * ', connection_weight, store_propagation);\n            }\n            var projected = getVar(this, 'error', 'projected', this.error.projected);\n            buildSentence(projected, ' = ', derivative, ' * ', error, store_propagation);\n            buildSentence(error, ' = 0', store_propagation);\n            for (var id in this.trace.extended) {\n              var neuron = this.neighboors[id];\n              var influence = getVar('aux_2');\n              var neuron_old = getVar(neuron, 'old');\n              if (neuron.selfconnection.gater == this) buildSentence(influence, ' = ', neuron_old, store_propagation);else buildSentence(influence, ' = 0', store_propagation);\n              for (var input in this.trace.influences[neuron.ID]) {\n                var connection = this.trace.influences[neuron.ID][input];\n                var connection_weight = getVar(connection, 'weight');\n                var neuron_activation = getVar(connection.from, 'activation');\n                buildSentence(influence, ' += ', connection_weight, ' * ', neuron_activation, store_propagation);\n              }\n              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n              buildSentence(error, ' += ', neuron_responsibility, ' * ', influence, store_propagation);\n            }\n            var gated = getVar(this, 'error', 'gated', this.error.gated);\n            buildSentence(gated, ' = ', derivative, ' * ', error, store_propagation);\n            buildSentence(responsibility, ' = ', projected, ' + ', gated, store_propagation);\n            for (var id in this.connections.inputs) {\n              var input = this.connections.inputs[id];\n              var gradient = getVar('aux');\n              var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n              buildSentence(gradient, ' = ', projected, ' * ', trace, store_propagation);\n              for (var id in this.trace.extended) {\n                var neuron = this.neighboors[id];\n                var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n                var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n                buildSentence(gradient, ' += ', neuron_responsibility, ' * ', xtrace, store_propagation);\n              }\n              var input_weight = getVar(input, 'weight');\n              buildSentence(input_weight, ' += ', rate, ' * ', gradient, store_propagation);\n            }\n          } else if (noGates) {\n            buildSentence(responsibility, ' = 0', store_propagation);\n            for (var id in this.connections.projected) {\n              var connection = this.connections.projected[id];\n              var neuron = connection.to;\n              var connection_weight = getVar(connection, 'weight');\n              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n              if (connection.gater) {\n                var connection_gain = getVar(connection, 'gain');\n                buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', connection_gain, ' * ', connection_weight, store_propagation);\n              } else buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', connection_weight, store_propagation);\n            }\n            buildSentence(responsibility, ' *= ', derivative, store_propagation);\n            for (var id in this.connections.inputs) {\n              var input = this.connections.inputs[id];\n              var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n              var input_weight = getVar(input, 'weight');\n              buildSentence(input_weight, ' += ', rate, ' * (', responsibility, ' * ', trace, ')', store_propagation);\n            }\n          } else if (noProjections) {\n            buildSentence(responsibility, ' = 0', store_propagation);\n            for (var id in this.trace.extended) {\n              var neuron = this.neighboors[id];\n              var influence = getVar('aux');\n              var neuron_old = getVar(neuron, 'old');\n              if (neuron.selfconnection.gater == this) buildSentence(influence, ' = ', neuron_old, store_propagation);else buildSentence(influence, ' = 0', store_propagation);\n              for (var input in this.trace.influences[neuron.ID]) {\n                var connection = this.trace.influences[neuron.ID][input];\n                var connection_weight = getVar(connection, 'weight');\n                var neuron_activation = getVar(connection.from, 'activation');\n                buildSentence(influence, ' += ', connection_weight, ' * ', neuron_activation, store_propagation);\n              }\n              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n              buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', influence, store_propagation);\n            }\n            buildSentence(responsibility, ' *= ', derivative, store_propagation);\n            for (var id in this.connections.inputs) {\n              var input = this.connections.inputs[id];\n              var gradient = getVar('aux');\n              buildSentence(gradient, ' = 0', store_propagation);\n              for (var id in this.trace.extended) {\n                var neuron = this.neighboors[id];\n                var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n                var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n                buildSentence(gradient, ' += ', neuron_responsibility, ' * ', xtrace, store_propagation);\n              }\n              var input_weight = getVar(input, 'weight');\n              buildSentence(input_weight, ' += ', rate, ' * ', gradient, store_propagation);\n            }\n          }\n        }\n        buildSentence(bias, ' += ', rate, ' * ', responsibility, store_propagation);\n      }\n      return {\n        memory: varID,\n        neurons: neurons + 1,\n        inputs: inputs,\n        outputs: outputs,\n        targets: targets,\n        variables: variables,\n        activation_sentences: activation_sentences,\n        trace_sentences: trace_sentences,\n        propagation_sentences: propagation_sentences,\n        layers: layers\n      };\n    }\n  }], [{\n    key: 'uid',\n    value: function uid() {\n      return neurons++;\n    }\n  }, {\n    key: 'quantity',\n    value: function quantity() {\n      return {\n        neurons: neurons,\n        connections: _Connection.connections\n      };\n    }\n  }]);\n\n  return Neuron;\n}();\n\nNeuron.squash = squash;\nexports.default = Neuron;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//+ Jonas Raoni Soares Silva\n//@ http://jsfromhell.com/array/shuffle [v1.0]\nfunction shuffleInplace(o) {\n  //v1.0\n  for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x) {}\n  return o;\n};\n\n// Built-in cost functions\nvar cost = {\n  // Eq. 9\n  CROSS_ENTROPY: function CROSS_ENTROPY(target, output) {\n    var crossentropy = 0;\n    for (var i in output) {\n      crossentropy -= target[i] * Math.log(output[i] + 1e-15) + (1 - target[i]) * Math.log(1 + 1e-15 - output[i]);\n    } // +1e-15 is a tiny push away to avoid Math.log(0)\n    return crossentropy;\n  },\n  MSE: function MSE(target, output) {\n    var mse = 0;\n    for (var i = 0; i < output.length; i++) {\n      mse += Math.pow(target[i] - output[i], 2);\n    }return mse / output.length;\n  },\n  BINARY: function BINARY(target, output) {\n    var misses = 0;\n    for (var i = 0; i < output.length; i++) {\n      misses += Math.round(target[i] * 2) != Math.round(output[i] * 2);\n    }return misses;\n  }\n};\n\nvar Trainer = function () {\n  function Trainer(network, options) {\n    _classCallCheck(this, Trainer);\n\n    options = options || {};\n    this.network = network;\n    this.rate = options.rate || .2;\n    this.iterations = options.iterations || 100000;\n    this.error = options.error || .005;\n    this.cost = options.cost || null;\n    this.crossValidate = options.crossValidate || null;\n  }\n\n  // trains any given set to a network\n\n\n  _createClass(Trainer, [{\n    key: 'train',\n    value: function train(set, options) {\n      var error = 1;\n      var iterations = bucketSize = 0;\n      var abort = false;\n      var currentRate;\n      var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n      var crossValidate = false,\n          testSet,\n          trainSet;\n\n      var start = Date.now();\n\n      if (options) {\n        if (options.iterations) this.iterations = options.iterations;\n        if (options.error) this.error = options.error;\n        if (options.rate) this.rate = options.rate;\n        if (options.cost) this.cost = options.cost;\n        if (options.schedule) this.schedule = options.schedule;\n        if (options.customLog) {\n          // for backward compatibility with code that used customLog\n          console.log('Deprecated: use schedule instead of customLog');\n          this.schedule = options.customLog;\n        }\n        if (this.crossValidate || options.crossValidate) {\n          if (!this.crossValidate) this.crossValidate = {};\n          crossValidate = true;\n          if (options.crossValidate.testSize) this.crossValidate.testSize = options.crossValidate.testSize;\n          if (options.crossValidate.testError) this.crossValidate.testError = options.crossValidate.testError;\n        }\n      }\n\n      currentRate = this.rate;\n      if (Array.isArray(this.rate)) {\n        var bucketSize = Math.floor(this.iterations / this.rate.length);\n      }\n\n      if (crossValidate) {\n        var numTrain = Math.ceil((1 - this.crossValidate.testSize) * set.length);\n        trainSet = set.slice(0, numTrain);\n        testSet = set.slice(numTrain);\n      }\n\n      var lastError = 0;\n      while (!abort && iterations < this.iterations && error > this.error) {\n        if (crossValidate && error <= this.crossValidate.testError) {\n          break;\n        }\n\n        var currentSetSize = set.length;\n        error = 0;\n        iterations++;\n\n        if (bucketSize > 0) {\n          var currentBucket = Math.floor(iterations / bucketSize);\n          currentRate = this.rate[currentBucket] || currentRate;\n        }\n\n        if (typeof this.rate === 'function') {\n          currentRate = this.rate(iterations, lastError);\n        }\n\n        if (crossValidate) {\n          this._trainSet(trainSet, currentRate, cost);\n          error += this.test(testSet).error;\n          currentSetSize = 1;\n        } else {\n          error += this._trainSet(set, currentRate, cost);\n          currentSetSize = set.length;\n        }\n\n        // check error\n        error /= currentSetSize;\n        lastError = error;\n\n        if (options) {\n          if (this.schedule && this.schedule.every && iterations % this.schedule.every == 0) abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate });else if (options.log && iterations % options.log == 0) {\n            console.log('iterations', iterations, 'error', error, 'rate', currentRate);\n          }\n          ;\n          if (options.shuffle) shuffleInplace(set);\n        }\n      }\n\n      var results = {\n        error: error,\n        iterations: iterations,\n        time: Date.now() - start\n      };\n\n      return results;\n    }\n\n    // trains any given set to a network, using a WebWorker (only for the browser). Returns a Promise of the results.\n\n  }, {\n    key: 'trainAsync',\n    value: function trainAsync(set, options) {\n      var train = this.workerTrain.bind(this);\n      return new Promise(function (resolve, reject) {\n        try {\n          train(set, resolve, options, true);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    // preforms one training epoch and returns the error (private function used in this.train)\n\n  }, {\n    key: '_trainSet',\n    value: function _trainSet(set, currentRate, costFunction) {\n      var errorSum = 0;\n      for (var i = 0; i < set.length; i++) {\n        var input = set[i].input;\n        var target = set[i].output;\n\n        var output = this.network.activate(input);\n        this.network.propagate(currentRate, target);\n\n        errorSum += costFunction(target, output);\n      }\n      return errorSum;\n    }\n\n    // tests a set and returns the error and elapsed time\n\n  }, {\n    key: 'test',\n    value: function test(set, options) {\n      var error = 0;\n      var input, output, target;\n      var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n\n      var start = Date.now();\n\n      for (var i = 0; i < set.length; i++) {\n        input = set[i].input;\n        target = set[i].output;\n        output = this.network.activate(input);\n        error += cost(target, output);\n      }\n\n      error /= set.length;\n\n      var results = {\n        error: error,\n        time: Date.now() - start\n      };\n\n      return results;\n    }\n\n    // trains any given set to a network using a WebWorker [deprecated: use trainAsync instead]\n\n  }, {\n    key: 'workerTrain',\n    value: function workerTrain(set, callback, options, suppressWarning) {\n      if (!suppressWarning) {\n        console.warn('Deprecated: do not use `workerTrain`, use `trainAsync` instead.');\n      }\n      var that = this;\n\n      if (!this.network.optimized) this.network.optimize();\n\n      // Create a new worker\n      var worker = this.network.worker(this.network.optimized.memory, set, options);\n\n      // train the worker\n      worker.onmessage = function (e) {\n        switch (e.data.action) {\n          case 'done':\n            var iterations = e.data.message.iterations;\n            var error = e.data.message.error;\n            var time = e.data.message.time;\n\n            that.network.optimized.ownership(e.data.memoryBuffer);\n\n            // Done callback\n            callback({\n              error: error,\n              iterations: iterations,\n              time: time\n            });\n\n            // Delete the worker and all its associated memory\n            worker.terminate();\n            break;\n\n          case 'log':\n            console.log(e.data.message);\n\n          case 'schedule':\n            if (options && options.schedule && typeof options.schedule.do === 'function') {\n              var scheduled = options.schedule.do;\n              scheduled(e.data.message);\n            }\n            break;\n        }\n      };\n\n      // Start the worker\n      worker.postMessage({ action: 'startTraining' });\n    }\n\n    // trains an XOR to the network\n\n  }, {\n    key: 'XOR',\n    value: function XOR(options) {\n      if (this.network.inputs() != 2 || this.network.outputs() != 1) throw new Error('Incompatible network (2 inputs, 1 output)');\n\n      var defaults = {\n        iterations: 100000,\n        log: false,\n        shuffle: true,\n        cost: Trainer.cost.MSE\n      };\n\n      if (options) for (var i in options) {\n        defaults[i] = options[i];\n      }return this.train([{\n        input: [0, 0],\n        output: [0]\n      }, {\n        input: [1, 0],\n        output: [1]\n      }, {\n        input: [0, 1],\n        output: [1]\n      }, {\n        input: [1, 1],\n        output: [0]\n      }], defaults);\n    }\n\n    // trains the network to pass a Distracted Sequence Recall test\n\n  }, {\n    key: 'DSR',\n    value: function DSR(options) {\n      options = options || {};\n\n      var targets = options.targets || [2, 4, 7, 8];\n      var distractors = options.distractors || [3, 5, 6, 9];\n      var prompts = options.prompts || [0, 1];\n      var length = options.length || 24;\n      var criterion = options.success || 0.95;\n      var iterations = options.iterations || 100000;\n      var rate = options.rate || .1;\n      var log = options.log || 0;\n      var schedule = options.schedule || {};\n      var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\n      var trial, correct, i, j, success;\n      trial = correct = i = j = success = 0;\n      var error = 1,\n          symbols = targets.length + distractors.length + prompts.length;\n\n      var noRepeat = function noRepeat(range, avoid) {\n        var number = Math.random() * range | 0;\n        var used = false;\n        for (var i in avoid) {\n          if (number == avoid[i]) used = true;\n        }return used ? noRepeat(range, avoid) : number;\n      };\n\n      var equal = function equal(prediction, output) {\n        for (var i in prediction) {\n          if (Math.round(prediction[i]) != output[i]) return false;\n        }return true;\n      };\n\n      var start = Date.now();\n\n      while (trial < iterations && (success < criterion || trial % 1000 != 0)) {\n        // generate sequence\n        var sequence = [],\n            sequenceLength = length - prompts.length;\n        for (i = 0; i < sequenceLength; i++) {\n          var any = Math.random() * distractors.length | 0;\n          sequence.push(distractors[any]);\n        }\n        var indexes = [],\n            positions = [];\n        for (i = 0; i < prompts.length; i++) {\n          indexes.push(Math.random() * targets.length | 0);\n          positions.push(noRepeat(sequenceLength, positions));\n        }\n        positions = positions.sort();\n        for (i = 0; i < prompts.length; i++) {\n          sequence[positions[i]] = targets[indexes[i]];\n          sequence.push(prompts[i]);\n        }\n\n        //train sequence\n        var distractorsCorrect;\n        var targetsCorrect = distractorsCorrect = 0;\n        error = 0;\n        for (i = 0; i < length; i++) {\n          // generate input from sequence\n          var input = [];\n          for (j = 0; j < symbols; j++) {\n            input[j] = 0;\n          }input[sequence[i]] = 1;\n\n          // generate target output\n          var output = [];\n          for (j = 0; j < targets.length; j++) {\n            output[j] = 0;\n          }if (i >= sequenceLength) {\n            var index = i - sequenceLength;\n            output[indexes[index]] = 1;\n          }\n\n          // check result\n          var prediction = this.network.activate(input);\n\n          if (equal(prediction, output)) {\n            if (i < sequenceLength) distractorsCorrect++;else targetsCorrect++;\n          } else {\n            this.network.propagate(rate, output);\n          }\n\n          error += cost(output, prediction);\n\n          if (distractorsCorrect + targetsCorrect == length) correct++;\n        }\n\n        // calculate error\n        if (trial % 1000 == 0) correct = 0;\n        trial++;\n        var divideError = trial % 1000;\n        divideError = divideError == 0 ? 1000 : divideError;\n        success = correct / divideError;\n        error /= length;\n\n        // log\n        if (log && trial % log == 0) console.log('iterations:', trial, ' success:', success, ' correct:', correct, ' time:', Date.now() - start, ' error:', error);\n        if (schedule.do && schedule.every && trial % schedule.every == 0) schedule.do({\n          iterations: trial,\n          success: success,\n          error: error,\n          time: Date.now() - start,\n          correct: correct\n        });\n      }\n\n      return {\n        iterations: trial,\n        success: success,\n        error: error,\n        time: Date.now() - start\n      };\n    }\n\n    // train the network to learn an Embeded Reber Grammar\n\n  }, {\n    key: 'ERG',\n    value: function ERG(options) {\n\n      options = options || {};\n      var iterations = options.iterations || 150000;\n      var criterion = options.error || .05;\n      var rate = options.rate || .1;\n      var log = options.log || 500;\n      var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\n      // gramar node\n      var Node = function Node() {\n        this.paths = [];\n      };\n      Node.prototype = {\n        connect: function connect(node, value) {\n          this.paths.push({\n            node: node,\n            value: value\n          });\n          return this;\n        },\n        any: function any() {\n          if (this.paths.length == 0) return false;\n          var index = Math.random() * this.paths.length | 0;\n          return this.paths[index];\n        },\n        test: function test(value) {\n          for (var i in this.paths) {\n            if (this.paths[i].value == value) return this.paths[i];\n          }return false;\n        }\n      };\n\n      var reberGrammar = function reberGrammar() {\n\n        // build a reber grammar\n        var output = new Node();\n        var n1 = new Node().connect(output, 'E');\n        var n2 = new Node().connect(n1, 'S');\n        var n3 = new Node().connect(n1, 'V').connect(n2, 'P');\n        var n4 = new Node().connect(n2, 'X');\n        n4.connect(n4, 'S');\n        var n5 = new Node().connect(n3, 'V');\n        n5.connect(n5, 'T');\n        n2.connect(n5, 'X');\n        var n6 = new Node().connect(n4, 'T').connect(n5, 'P');\n        var input = new Node().connect(n6, 'B');\n\n        return {\n          input: input,\n          output: output\n        };\n      };\n\n      // build an embeded reber grammar\n      var embededReberGrammar = function embededReberGrammar() {\n        var reber1 = reberGrammar();\n        var reber2 = reberGrammar();\n\n        var output = new Node();\n        var n1 = new Node().connect(output, 'E');\n        reber1.output.connect(n1, 'T');\n        reber2.output.connect(n1, 'P');\n        var n2 = new Node().connect(reber1.input, 'P').connect(reber2.input, 'T');\n        var input = new Node().connect(n2, 'B');\n\n        return {\n          input: input,\n          output: output\n        };\n      };\n\n      // generate an ERG sequence\n      var generate = function generate() {\n        var node = embededReberGrammar().input;\n        var next = node.any();\n        var str = '';\n        while (next) {\n          str += next.value;\n          next = next.node.any();\n        }\n        return str;\n      };\n\n      // test if a string matches an embeded reber grammar\n      var test = function test(str) {\n        var node = embededReberGrammar().input;\n        var i = 0;\n        var ch = str.charAt(i);\n        while (i < str.length) {\n          var next = node.test(ch);\n          if (!next) return false;\n          node = next.node;\n          ch = str.charAt(++i);\n        }\n        return true;\n      };\n\n      // helper to check if the output and the target vectors match\n      var different = function different(array1, array2) {\n        var max1 = 0;\n        var i1 = -1;\n        var max2 = 0;\n        var i2 = -1;\n        for (var i in array1) {\n          if (array1[i] > max1) {\n            max1 = array1[i];\n            i1 = i;\n          }\n          if (array2[i] > max2) {\n            max2 = array2[i];\n            i2 = i;\n          }\n        }\n\n        return i1 != i2;\n      };\n\n      var iteration = 0;\n      var error = 1;\n      var table = {\n        'B': 0,\n        'P': 1,\n        'T': 2,\n        'X': 3,\n        'S': 4,\n        'E': 5\n      };\n\n      var start = Date.now();\n      while (iteration < iterations && error > criterion) {\n        var i = 0;\n        error = 0;\n\n        // ERG sequence to learn\n        var sequence = generate();\n\n        // input\n        var read = sequence.charAt(i);\n        // target\n        var predict = sequence.charAt(i + 1);\n\n        // train\n        while (i < sequence.length - 1) {\n          var input = [];\n          var target = [];\n          for (var j = 0; j < 6; j++) {\n            input[j] = 0;\n            target[j] = 0;\n          }\n          input[table[read]] = 1;\n          target[table[predict]] = 1;\n\n          var output = this.network.activate(input);\n\n          if (different(output, target)) this.network.propagate(rate, target);\n\n          read = sequence.charAt(++i);\n          predict = sequence.charAt(i + 1);\n\n          error += cost(target, output);\n        }\n        error /= sequence.length;\n        iteration++;\n        if (iteration % log == 0) {\n          console.log('iterations:', iteration, ' time:', Date.now() - start, ' error:', error);\n        }\n      }\n\n      return {\n        iterations: iteration,\n        error: error,\n        time: Date.now() - start,\n        test: test,\n        generate: generate\n      };\n    }\n  }, {\n    key: 'timingTask',\n    value: function timingTask(options) {\n\n      if (this.network.inputs() != 2 || this.network.outputs() != 1) throw new Error('Invalid Network: must have 2 inputs and one output');\n\n      if (typeof options == 'undefined') options = {};\n\n      // helper\n      function getSamples(trainingSize, testSize) {\n\n        // sample size\n        var size = trainingSize + testSize;\n\n        // generate samples\n        var t = 0;\n        var set = [];\n        for (var i = 0; i < size; i++) {\n          set.push({ input: [0, 0], output: [0] });\n        }\n        while (t < size - 20) {\n          var n = Math.round(Math.random() * 20);\n          set[t].input[0] = 1;\n          for (var j = t; j <= t + n; j++) {\n            set[j].input[1] = n / 20;\n            set[j].output[0] = 0.5;\n          }\n          t += n;\n          n = Math.round(Math.random() * 20);\n          for (var k = t + 1; k <= t + n && k < size; k++) {\n            set[k].input[1] = set[t].input[1];\n          }t += n;\n        }\n\n        // separate samples between train and test sets\n        var trainingSet = [];\n        var testSet = [];\n        for (var l = 0; l < size; l++) {\n          (l < trainingSize ? trainingSet : testSet).push(set[l]);\n        } // return samples\n        return {\n          train: trainingSet,\n          test: testSet\n        };\n      }\n\n      var iterations = options.iterations || 200;\n      var error = options.error || .005;\n      var rate = options.rate || [.03, .02];\n      var log = options.log === false ? false : options.log || 10;\n      var cost = options.cost || this.cost || Trainer.cost.MSE;\n      var trainingSamples = options.trainSamples || 7000;\n      var testSamples = options.trainSamples || 1000;\n\n      // samples for training and testing\n      var samples = getSamples(trainingSamples, testSamples);\n\n      // train\n      var result = this.train(samples.train, {\n        rate: rate,\n        log: log,\n        iterations: iterations,\n        error: error,\n        cost: cost\n      });\n\n      return {\n        train: result,\n        test: this.test(samples.test)\n      };\n    }\n  }]);\n\n  return Trainer;\n}();\n\nTrainer.cost = cost;\nexports.default = Trainer;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Architect = exports.Network = exports.Trainer = exports.Layer = exports.Neuron = undefined;\n\nvar _Neuron = __webpack_require__(2);\n\nObject.defineProperty(exports, 'Neuron', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Neuron).default;\n  }\n});\n\nvar _Layer = __webpack_require__(0);\n\nObject.defineProperty(exports, 'Layer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Layer).default;\n  }\n});\n\nvar _Trainer = __webpack_require__(3);\n\nObject.defineProperty(exports, 'Trainer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Trainer).default;\n  }\n});\n\nvar _Network = __webpack_require__(1);\n\nObject.defineProperty(exports, 'Network', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Network).default;\n  }\n});\n\nvar _architect = __webpack_require__(7);\n\nvar Architect = _interopRequireWildcard(_architect);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Architect = Architect;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar connections = exports.connections = 0;\n\nvar Connection = function () {\n  function Connection(from, to, weight) {\n    _classCallCheck(this, Connection);\n\n    if (!from || !to) throw new Error(\"Connection Error: Invalid neurons\");\n\n    this.ID = Connection.uid();\n    this.from = from;\n    this.to = to;\n    this.weight = typeof weight == 'undefined' ? Math.random() * .2 - .1 : weight;\n    this.gain = 1;\n    this.gater = null;\n  }\n\n  _createClass(Connection, null, [{\n    key: \"uid\",\n    value: function uid() {\n      return exports.connections = connections += 1, connections - 1;\n    }\n  }]);\n\n  return Connection;\n}();\n\nexports.default = Connection;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connections = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// represents a connection from one layer to another, and keeps track of its weight and gain\nvar connections = exports.connections = 0;\n\nvar LayerConnection = function () {\n  function LayerConnection(fromLayer, toLayer, type, weights) {\n    _classCallCheck(this, LayerConnection);\n\n    this.ID = LayerConnection.uid();\n    this.from = fromLayer;\n    this.to = toLayer;\n    this.selfconnection = toLayer == fromLayer;\n    this.type = type;\n    this.connections = {};\n    this.list = [];\n    this.size = 0;\n    this.gatedfrom = [];\n\n    if (typeof this.type == 'undefined') {\n      if (fromLayer == toLayer) this.type = _Layer2.default.connectionType.ONE_TO_ONE;else this.type = _Layer2.default.connectionType.ALL_TO_ALL;\n    }\n\n    if (this.type == _Layer2.default.connectionType.ALL_TO_ALL || this.type == _Layer2.default.connectionType.ALL_TO_ELSE) {\n      for (var here in this.from.list) {\n        for (var there in this.to.list) {\n          var from = this.from.list[here];\n          var to = this.to.list[there];\n          if (this.type == _Layer2.default.connectionType.ALL_TO_ELSE && from == to) continue;\n          var connection = from.project(to, weights);\n\n          this.connections[connection.ID] = connection;\n          this.size = this.list.push(connection);\n        }\n      }\n    } else if (this.type == _Layer2.default.connectionType.ONE_TO_ONE) {\n\n      for (var neuron in this.from.list) {\n        var from = this.from.list[neuron];\n        var to = this.to.list[neuron];\n        var connection = from.project(to, weights);\n\n        this.connections[connection.ID] = connection;\n        this.size = this.list.push(connection);\n      }\n    }\n\n    fromLayer.connectedTo.push(this);\n  }\n\n  _createClass(LayerConnection, null, [{\n    key: 'uid',\n    value: function uid() {\n      return exports.connections = connections += 1, connections - 1;\n    }\n  }]);\n\n  return LayerConnection;\n}();\n\nexports.default = LayerConnection;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Perceptron = __webpack_require__(8);\n\nObject.defineProperty(exports, 'Perceptron', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Perceptron).default;\n  }\n});\n\nvar _LSTM = __webpack_require__(9);\n\nObject.defineProperty(exports, 'LSTM', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_LSTM).default;\n  }\n});\n\nvar _Liquid = __webpack_require__(10);\n\nObject.defineProperty(exports, 'Liquid', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Liquid).default;\n  }\n});\n\nvar _Hopfield = __webpack_require__(11);\n\nObject.defineProperty(exports, 'Hopfield', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Hopfield).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Network2 = __webpack_require__(1);\n\nvar _Network3 = _interopRequireDefault(_Network2);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Perceptron = function (_Network) {\n  _inherits(Perceptron, _Network);\n\n  function Perceptron() {\n    _classCallCheck(this, Perceptron);\n\n    var _this = _possibleConstructorReturn(this, (Perceptron.__proto__ || Object.getPrototypeOf(Perceptron)).call(this));\n\n    var args = Array.prototype.slice.call(arguments); // convert arguments to Array\n    if (args.length < 3) throw new Error('not enough layers (minimum 3) !!');\n\n    var inputs = args.shift(); // first argument\n    var outputs = args.pop(); // last argument\n    var layers = args; // all the arguments in the middle\n\n    var input = new _Layer2.default(inputs);\n    var hidden = [];\n    var output = new _Layer2.default(outputs);\n\n    var previous = input;\n\n    // generate hidden layers\n    for (var i = 0; i < layers.length; i++) {\n      var size = layers[i];\n      var layer = new _Layer2.default(size);\n      hidden.push(layer);\n      previous.project(layer);\n      previous = layer;\n    }\n    previous.project(output);\n\n    // set layers of the neural network\n    _this.set({\n      input: input,\n      hidden: hidden,\n      output: output\n    });\n    return _this;\n  }\n\n  return Perceptron;\n}(_Network3.default);\n\nexports.default = Perceptron;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Network2 = __webpack_require__(1);\n\nvar _Network3 = _interopRequireDefault(_Network2);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LSTM = function (_Network) {\n  _inherits(LSTM, _Network);\n\n  function LSTM() {\n    _classCallCheck(this, LSTM);\n\n    var _this = _possibleConstructorReturn(this, (LSTM.__proto__ || Object.getPrototypeOf(LSTM)).call(this));\n\n    var args = Array.prototype.slice.call(arguments); // convert arguments to array\n    if (args.length < 3) throw new Error(\"not enough layers (minimum 3) !!\");\n\n    var last = args.pop();\n    var option = {\n      peepholes: _Layer2.default.connectionType.ALL_TO_ALL,\n      hiddenToHidden: false,\n      outputToHidden: false,\n      outputToGates: false,\n      inputToOutput: true\n    };\n    if (typeof last != 'number') {\n      var outputs = args.pop();\n      if (last.hasOwnProperty('peepholes')) option.peepholes = last.peepholes;\n      if (last.hasOwnProperty('hiddenToHidden')) option.hiddenToHidden = last.hiddenToHidden;\n      if (last.hasOwnProperty('outputToHidden')) option.outputToHidden = last.outputToHidden;\n      if (last.hasOwnProperty('outputToGates')) option.outputToGates = last.outputToGates;\n      if (last.hasOwnProperty('inputToOutput')) option.inputToOutput = last.inputToOutput;\n    } else {\n      var outputs = last;\n    }\n\n    var inputs = args.shift();\n    var layers = args;\n\n    var inputLayer = new _Layer2.default(inputs);\n    var hiddenLayers = [];\n    var outputLayer = new _Layer2.default(outputs);\n\n    var previous = null;\n\n    // generate layers\n    for (var i = 0; i < layers.length; i++) {\n      // generate memory blocks (memory cell and respective gates)\n      var size = layers[i];\n\n      var inputGate = new _Layer2.default(size).set({\n        bias: 1\n      });\n      var forgetGate = new _Layer2.default(size).set({\n        bias: 1\n      });\n      var memoryCell = new _Layer2.default(size);\n      var outputGate = new _Layer2.default(size).set({\n        bias: 1\n      });\n\n      hiddenLayers.push(inputGate);\n      hiddenLayers.push(forgetGate);\n      hiddenLayers.push(memoryCell);\n      hiddenLayers.push(outputGate);\n\n      // connections from input layer\n      var input = inputLayer.project(memoryCell);\n      inputLayer.project(inputGate);\n      inputLayer.project(forgetGate);\n      inputLayer.project(outputGate);\n\n      // connections from previous memory-block layer to this one\n      if (previous != null) {\n        var cell = previous.project(memoryCell);\n        previous.project(inputGate);\n        previous.project(forgetGate);\n        previous.project(outputGate);\n      }\n\n      // connections from memory cell\n      var output = memoryCell.project(outputLayer);\n\n      // self-connection\n      var self = memoryCell.project(memoryCell);\n\n      // hidden to hidden recurrent connection\n      if (option.hiddenToHidden) memoryCell.project(memoryCell, _Layer2.default.connectionType.ALL_TO_ELSE);\n\n      // out to hidden recurrent connection\n      if (option.outputToHidden) outputLayer.project(memoryCell);\n\n      // out to gates recurrent connection\n      if (option.outputToGates) {\n        outputLayer.project(inputGate);\n        outputLayer.project(outputGate);\n        outputLayer.project(forgetGate);\n      }\n\n      // peepholes\n      memoryCell.project(inputGate, option.peepholes);\n      memoryCell.project(forgetGate, option.peepholes);\n      memoryCell.project(outputGate, option.peepholes);\n\n      // gates\n      inputGate.gate(input, _Layer2.default.gateType.INPUT);\n      forgetGate.gate(self, _Layer2.default.gateType.ONE_TO_ONE);\n      outputGate.gate(output, _Layer2.default.gateType.OUTPUT);\n      if (previous != null) inputGate.gate(cell, _Layer2.default.gateType.INPUT);\n\n      previous = memoryCell;\n    }\n\n    // input to output direct connection\n    if (option.inputToOutput) inputLayer.project(outputLayer);\n\n    // set the layers of the neural network\n    _this.set({\n      input: inputLayer,\n      hidden: hiddenLayers,\n      output: outputLayer\n    });\n    return _this;\n  }\n\n  return LSTM;\n}(_Network3.default);\n\nexports.default = LSTM;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Network2 = __webpack_require__(1);\n\nvar _Network3 = _interopRequireDefault(_Network2);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Liquid = function (_Network) {\n  _inherits(Liquid, _Network);\n\n  function Liquid(inputs, hidden, outputs, connections, gates) {\n    _classCallCheck(this, Liquid);\n\n    // create layers\n    var _this = _possibleConstructorReturn(this, (Liquid.__proto__ || Object.getPrototypeOf(Liquid)).call(this));\n\n    var inputLayer = new _Layer2.default(inputs);\n    var hiddenLayer = new _Layer2.default(hidden);\n    var outputLayer = new _Layer2.default(outputs);\n\n    // make connections and gates randomly among the neurons\n    var neurons = hiddenLayer.neurons();\n    var connectionList = [];\n\n    for (var i = 0; i < connections; i++) {\n      // connect two random neurons\n      var from = Math.random() * neurons.length | 0;\n      var to = Math.random() * neurons.length | 0;\n      var connection = neurons[from].project(neurons[to]);\n      connectionList.push(connection);\n    }\n\n    for (var j = 0; j < gates; j++) {\n      // pick a random gater neuron\n      var gater = Math.random() * neurons.length | 0;\n      // pick a random connection to gate\n      var connection = Math.random() * connectionList.length | 0;\n      // let the gater gate the connection\n      neurons[gater].gate(connectionList[connection]);\n    }\n\n    // connect the layers\n    inputLayer.project(hiddenLayer);\n    hiddenLayer.project(outputLayer);\n\n    // set the layers of the network\n    _this.set({\n      input: inputLayer,\n      hidden: [hiddenLayer],\n      output: outputLayer\n    });\n    return _this;\n  }\n\n  return Liquid;\n}(_Network3.default);\n\nexports.default = Liquid;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Network2 = __webpack_require__(1);\n\nvar _Network3 = _interopRequireDefault(_Network2);\n\nvar _Trainer = __webpack_require__(3);\n\nvar _Trainer2 = _interopRequireDefault(_Trainer);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Hopfield = function (_Network) {\n  _inherits(Hopfield, _Network);\n\n  function Hopfield(size) {\n    _classCallCheck(this, Hopfield);\n\n    var _this = _possibleConstructorReturn(this, (Hopfield.__proto__ || Object.getPrototypeOf(Hopfield)).call(this));\n\n    var inputLayer = new _Layer2.default(size);\n    var outputLayer = new _Layer2.default(size);\n\n    inputLayer.project(outputLayer, _Layer2.default.connectionType.ALL_TO_ALL);\n\n    _this.set({\n      input: inputLayer,\n      hidden: [],\n      output: outputLayer\n    });\n\n    _this.trainer = new _Trainer2.default(_this);\n    return _this;\n  }\n\n  _createClass(Hopfield, [{\n    key: 'learn',\n    value: function learn(patterns) {\n      var set = [];\n      for (var p in patterns) {\n        set.push({\n          input: patterns[p],\n          output: patterns[p]\n        });\n      }return this.trainer.train(set, {\n        iterations: 500000,\n        error: .00005,\n        rate: 1\n      });\n    }\n  }, {\n    key: 'feed',\n    value: function feed(pattern) {\n      var output = this.activate(pattern);\n\n      var pattern = [];\n      for (var i in output) {\n        pattern[i] = output[i] > .5 ? 1 : 0;\n      }return pattern;\n    }\n  }]);\n\n  return Hopfield;\n}(_Network3.default);\n\nexports.default = Hopfield;\n\n/***/ })\n/******/ ]);\n});",null,null,null,null,null,null,null,null,null,null],"names":["Gender","GrammaticalCase","validateAnthroponym","anthroponym","TypeError","Male","Female","includes","gender","firstName","middleName","lastName","InflectorCommandType","firstNameInflector","middleNameInflector","lastNameInflector","this","AnthroponymInflector","grammaticalCase","result","inflect","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","countGroups","src","matches","RegExp","toString","exec","length","isUpperCase","pos","charAt","toUpperCase","isLowerCase","toLowerCase","command","AppendCommandRunner","value","ReplaceCommandRunner","CommandRunnerFactory","type","Append","Replace","rule","commandRunnerFactory","RuleInflector","word","commands","grammaticalCases","searchValue","pattern","modify","inflectedWord","replace","match","_i","groups","replacer","groupCount","_this","groupIndex","make","dest","srcLetterCases","srcChars","split","srcChar","push","destChars","destChar","srcLetterCase","copyLetterCase","NameInflector","name","words","map","wordIndex","inflectWord","join","rules","_super","FirstNameInflector","filter","usage","find","test","sort","firstRule","secondRule","MiddleNameInflector","PATTERN_VOWELS","partOfSpeechRecognizer","LastNameInflector","isLastWord","countVowels","partOfSpeech","recognize","PartOfSpeech","factory","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","getter","o","defineProperty","configurable","enumerable","get","n","__esModule","object","property","s","_createClass","defineProperties","target","props","descriptor","writable","key","Constructor","protoProps","staticProps","_LayerConnection2","_interopRequireDefault","_Neuron2","_Network2","obj","default","Layer","size","instance","_classCallCheck","list","connectedTo","neuron","input","activations","Error","id","activation","activate","rate","propagate","layer","weights","layers","connected","connection","gateType","INPUT","to","gater","connections","inputs","gated","ID","gate","OUTPUT","from","projected","ONE_TO_ONE","gatedfrom","selfconnected","here","there","connectionType","ALL_TO_ALL","clear","reset","options","label","squash","bias","ALL_TO_ELSE","_typeof","Symbol","iterator","_Layer2","_Trainer2","Network","hidden","output","optimized","optimize","unit","project","restore","inputLayer","outputLayer","that","neurons","propagation_sentences","reverse","hardcode","memory","variables","activation_sentences","j","trace_sentences","outputs","targets","network","Function","data","trace","check_activation","check_propagation","getValue","args","slice","arguments","shift","prop","pop","state","old","elegibility","extended","weight","gain","hiddenLayer","bool","ignoreTraces","ids","copy","LOGISTIC","TANH","IDENTITY","HLIM","RELU","selfconnection","edgeConnection","code","concat","layerTo","layerID","indexOf","layerToID","fakeNode","layerfrom","link","escape","dimension","tmp","substring","index","set","workerOptions","iterations","error","cost","crossValidate","costFunction","MSE","workerFunction","getWorkerSharedFunctions","JSON","stringify","blob","Blob","blobURL","window","URL","createObjectURL","Worker","fromJSON","toJSON","_SHARED_WORKER_FUNCTIONS","train_f","train","_trainSet_f","_trainSet","test_f","json","config","add","_Connection","_Connection2","x","derivate","fx","Math","exp","pow","tanh","Neuron","uid","responsibility","influences","neighboors","random","derivative","influence","incoming","xtrace","gradient","store_activation","store_trace","store_propagation","varID","__count","__neuron","allocate","store","currentLayer","getVar","buildSentence","sentence","isEmpty","noProjections","noGates","isInput","isOutput","self_gain","self_weight","input_activation","input_weight","input_gain","eP","eN","neuron_old","initialized","incoming_weight","incoming_activation","neuron_self_weight","neuron_self_gain","connection_weight","neuron_responsibility","shuffleInplace","floor","CROSS_ENTROPY","crossentropy","log","mse","BINARY","misses","round","Trainer","currentRate","testSet","trainSet","bucketSize","abort","start","Date","now","schedule","customLog","console","testSize","testError","isArray","numTrain","ceil","lastError","currentSetSize","currentBucket","every","do","shuffle","time","workerTrain","bind","Promise","resolve","reject","e","errorSum","callback","suppressWarning","warn","worker","onmessage","action","message","ownership","memoryBuffer","terminate","scheduled","postMessage","defaults","trial","correct","success","distractors","prompts","criterion","symbols","noRepeat","range","avoid","number","used","equal","prediction","sequence","sequenceLength","any","distractorsCorrect","indexes","positions","targetsCorrect","divideError","Node","paths","connect","node","reberGrammar","n1","n2","n3","n4","n5","n6","embededReberGrammar","reber1","reber2","generate","next","str","different","array1","array2","max1","i1","max2","i2","iteration","table","B","P","T","X","S","E","read","predict","ch","samples","trainingSize","t","k","trainingSet","getSamples","trainSamples","Architect","undefined","_Neuron","_Layer","_Trainer","_Network","newObj","_interopRequireWildcard","Connection","LayerConnection","fromLayer","toLayer","_Perceptron","_LSTM","_Liquid","_Hopfield","_Network3","_possibleConstructorReturn","self","ReferenceError","Perceptron","getPrototypeOf","previous","subClass","superClass","_inherits","LSTM","last","option","peepholes","hiddenToHidden","outputToHidden","outputToGates","inputToOutput","hiddenLayers","inputGate","forgetGate","memoryCell","outputGate","cell","Liquid","gates","connectionList","Hopfield","trainer","patterns","neuralNetworkConfig","WordEncoder","char","charCodeAt","padStart","digit","Number","parseInt","PartOfSpeechEncoder","Noun","Adjective","PartOfSpeechDecoder","synaptic","NeuralNetwork","structure","trainingData","trainingOptions","entries","_a","encode","decode","WordTransformer","PartOfSpeechRecognizer","transformedWord","transform","guard","apply","neuralNetwork","cache","PartOfSpeechRecognitionRule","pohorielovaStructure","kosmiiStructure","pelykhStructure","anthroponymInflector","inflectorRules","Ablative","Accusative","Dative","Genitive","Locative","Nominative","Vocative"],"mappings":"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"}