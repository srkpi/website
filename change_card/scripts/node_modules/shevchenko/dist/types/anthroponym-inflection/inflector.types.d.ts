import { Gender, GrammaticalCase } from '../core';
import { PartOfSpeech } from '../part-of-speech-recognition';
export declare type InflectorRule = {
    description: string;
    examples: string[];
    partOfSpeech: PartOfSpeech;
    gender: Gender[];
    priority: number;
    usage: string[];
    pattern: InflectorPattern;
    grammaticalCases: GrammaticalCases;
};
export declare type InflectorPattern = {
    find: string;
    modify: string;
};
export declare type GrammaticalCases = {
    [GrammaticalCase.Nominative]: InflectorCommandGroup[];
    [GrammaticalCase.Genitive]: InflectorCommandGroup[];
    [GrammaticalCase.Dative]: InflectorCommandGroup[];
    [GrammaticalCase.Accusative]: InflectorCommandGroup[];
    [GrammaticalCase.Ablative]: InflectorCommandGroup[];
    [GrammaticalCase.Locative]: InflectorCommandGroup[];
    [GrammaticalCase.Vocative]: InflectorCommandGroup[];
};
export declare type InflectorCommandGroup = {
    [groupIndex: string]: InflectorCommand;
};
export declare type InflectorCommand = {
    type: InflectorCommandType;
    value: string;
};
export declare enum InflectorCommandType {
    Replace = "replace",
    Append = "append"
}
//# sourceMappingURL=inflector.types.d.ts.map